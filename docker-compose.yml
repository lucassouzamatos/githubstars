version: "2.1"

volumes:
  postgres-container:

services:
  base:
    build:
      context: .
    image: workspace

  api:
    restart: always
    image: workspace
    environment:
      - NODE_ENV=dev
    volumes:
      - ./packages/api:/packages/api
      - /node_modules
      - ./packages/api/ormconfig.docker.json:/packages/api/ormconfig.json

    ports:
      - "3333:3333"
    depends_on: 
      postgres:
        condition: service_healthy
    container_name: api
    command: yarn workspace api dev:server

  web:
    restart: always
    image: workspace
    environment:
      - NODE_ENV=dev
    volumes:
      - ./packages/web:/packages/web
      - /node_modules
      - ./packages/web/.env.docker:/packages/web/.env
    ports:
      - "3000:3000"
    container_name: web
    command: yarn workspace web start

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: githubstars
    ports:
      - "54443:5432"
    container_name: postgres
    volumes:
      - "postgres-container:/var/lib/postgresql"
      - "./postgres/init-database.sh:/docker-entrypoint-initdb.d/init-database.sh"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin@pgadmin.com"
      PGADMIN_DEFAULT_PASSWORD: "pgadmin"
    ports:
      - "16543:80"
    container_name: pgadmin

  nginx:
    container_name: nginx
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/log:/var/log/nginx
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on: [api, web]
    ports:
      - "80:80"
      - "443:443"
